apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
    name: aws-secret-store
    namespace: ecommerce-vti
spec:
    provider:
        aws:
            service: SecretsManager
            region: us-east-1
            auth:
                jwt:
                    serviceAccountRef:
                        name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
    name: backend-secrets
    namespace: ecommerce-vti
spec:
    refreshInterval: 1h
    secretStoreRef:
        name: aws-secret-store
        kind: SecretStore
    target:
        name: backend-secrets
        creationPolicy: Owner
    data:
        - secretKey: APP_KEY
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: APP_KEY
        - secretKey: DB_HOST
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: DB_HOST
        - secretKey: DB_DATABASE
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: DB_DATABASE
        - secretKey: DB_USERNAME
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: DB_USERNAME
        - secretKey: DB_PASSWORD
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: DB_PASSWORD
        - secretKey: REDIS_HOST
          remoteRef:
              key: "BACKEND_SECRETS_NAME"
              property: REDIS_HOST
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
    name: frontend-secrets
    namespace: ecommerce-vti
spec:
    refreshInterval: 1h
    secretStoreRef:
        name: aws-secret-store
        kind: SecretStore
    target:
        name: frontend-secrets
        creationPolicy: Owner
    data:
        - secretKey: NEXT_PUBLIC_API_URL
          remoteRef:
              key: "FRONTEND_SECRETS_NAME"
              property: NEXT_PUBLIC_API_URL
